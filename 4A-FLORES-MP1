## Uploaded link for the actual ppt video:
[Watch Video](https://github.com/edrian12345/CSST106-4A/blob/main/4A-FLORES-MP1.mp4)

**# Topic 1.1: Introduction to Computer Vision and Image Processing**

![Image 1](https://raw.githubusercontent.com/user-attachments/assets/main/5dfb8f01-c794-4bb5-aa68-834c22ebfab7)

![Image 2](https://raw.githubusercontent.com/user-attachments/assets/main/abfe9279-24d9-49f4-9d04-8b183f12b6cb)

### Computer Vision
Simply put, computer vision (cv) is just like the human’s ability to perceive the physical world along with various things through the human eye’s lens and imagery. Though of course, the computer makes use of cameras and sensors to capture visual data instead of a literal eye.

However, in the context of cv in the current world’s emerging technology, which is AI, it is basically considered as a subfield within AI that allows the computer to see, interpret and visualize. It's as if improving a human’s ability to see and process the data lying around but make it many more times better in terms of precision and speed. This is true for both image and video format.

![Image 3](https://raw.githubusercontent.com/user-attachments/assets/main/ef864a1b-62c0-4b94-a867-8f93b647a8f6)

### Computer Vision: Understanding Images
Cv aims to extract and understand information just like we do, or simply put, to grasp meaning from images by recognizing objects, interpreting scenes, and identifying patterns. Unlike with image processing, the focus is more on the understanding of the content of said images rather than altering them.

### Image Processing: Enhancing Visuals
Image processing is mostly focused on improving image quality, it can come in forms like by adjusting colors, enhancing contrast, or removing noise. It refines raw images into a better version in terms of being clearer, with more refined versions, making it finally more suitable for operating on or simply even just for analysis. This is most commonly utilized in the field of photography, medical and graphic design.

![Image 4](https://raw.githubusercontent.com/user-attachments/assets/main/5083ac27-56da-40e0-9c1c-df6e6feeeec0)

### Case Study regarding Deep Fakes (AI) with CV and Image Processing
![Image 5](https://raw.githubusercontent.com/user-attachments/assets/main/620ad58a-1f0a-4b03-8d57-cd5cc411d49c)
![Image 6](https://raw.githubusercontent.com/user-attachments/assets/main/1306063a-f49d-4411-aacf-2162f7d8ce86)
![Image 7](https://raw.githubusercontent.com/user-attachments/assets/main/8c01b2ff-5813-4af0-99c0-6ae445d472fa)

### Implemented Code Sample
```python
import cv2
import matplotlib.pyplot as plt

# Loading image
image = cv2.imread('FaceRecognitionTrial.jpg')

# Convert to grayscale
gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# Applying Gaussian blur to reduce noise
blurred_image = cv2.GaussianBlur(gray_image, (5, 5), 0)

# Applying Canny Edge Detection
edges = cv2.Canny(blurred_image, threshold1=100, threshold2=200)

# Displaying both original and with edge-detected images
plt.figure(figsize=(10, 5))

plt.subplot(1, 2, 1)
plt.title('Original Image')
plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))

plt.subplot(1, 2, 2)
plt.title('Edge Detected Image')
plt.imshow(edges, cmap='gray')
plt.show()
